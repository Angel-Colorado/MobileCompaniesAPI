// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileCompaniesApi.Data;

#nullable disable

namespace MobileCompaniesApi.Data.MCMigrations
{
    [DbContext(typeof(MobileCoContext))]
    [Migration("20230406182601_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("MobileCompaniesApi.Models.Antenna", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Latitude", "Longitude")
                        .IsUnique();

                    b.ToTable("Antennas");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Name", "Model", "Manufacturer", "Type")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.DeviceUserPhoto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<int>("DeviceID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID")
                        .IsUnique();

                    b.ToTable("DeviceUserPhotos");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Antenna", b =>
                {
                    b.HasOne("MobileCompaniesApi.Models.Company", "Company")
                        .WithMany("Antennas")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Device", b =>
                {
                    b.HasOne("MobileCompaniesApi.Models.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.DeviceUserPhoto", b =>
                {
                    b.HasOne("MobileCompaniesApi.Models.Device", "Device")
                        .WithOne("DeviceUserPhoto")
                        .HasForeignKey("MobileCompaniesApi.Models.DeviceUserPhoto", "DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Position", b =>
                {
                    b.HasOne("MobileCompaniesApi.Models.Device", "Device")
                        .WithMany("Positions")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Company", b =>
                {
                    b.Navigation("Antennas");

                    b.Navigation("Devices");
                });

            modelBuilder.Entity("MobileCompaniesApi.Models.Device", b =>
                {
                    b.Navigation("DeviceUserPhoto");

                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
